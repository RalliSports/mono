// Service Types - Auto-generated from Service files
export type UserServiceFindOne = Awaited<ReturnType<InstanceType<typeof import('../user/user.service.ts').UserService>['findOne']>>;
export type UserServiceUpdateUser = Awaited<ReturnType<InstanceType<typeof import('../user/user.service.ts').UserService>['updateUser']>>;
export type UserServiceUpdateUserEmail = Awaited<ReturnType<InstanceType<typeof import('../user/user.service.ts').UserService>['updateUserEmail']>>;
export type UserServiceFaucetTokens = Awaited<ReturnType<InstanceType<typeof import('../user/user.service.ts').UserService>['faucetTokens']>>;
export type UserServiceSubscribeToWebPushNotification = Awaited<ReturnType<InstanceType<typeof import('../user/user.service.ts').UserService>['subscribeToWebPushNotification']>>;
export type UserServiceUnsubscribeFromWebPushNotification = Awaited<ReturnType<InstanceType<typeof import('../user/user.service.ts').UserService>['unsubscribeFromWebPushNotification']>>;
export type UserServiceTestWebpushNotification = Awaited<ReturnType<InstanceType<typeof import('../user/user.service.ts').UserService>['testWebpushNotification']>>;
export type UserServiceGetAllSubscriptions = Awaited<ReturnType<InstanceType<typeof import('../user/user.service.ts').UserService>['getAllSubscriptions']>>;
export type UserServiceGetAllSubscriptionsInstance = UserServiceGetAllSubscriptions[number];
export type UserServiceSendNotificationToUser = Awaited<ReturnType<InstanceType<typeof import('../user/user.service.ts').UserService>['sendNotificationToUser']>>;
export type UserServiceSendNotificationToAll = Awaited<ReturnType<InstanceType<typeof import('../user/user.service.ts').UserService>['sendNotificationToAll']>>;
export type UserServiceGetStreamChatToken = Awaited<ReturnType<InstanceType<typeof import('../user/user.service.ts').UserService>['getStreamChatToken']>>;
export type TeamServiceCreate = Awaited<ReturnType<InstanceType<typeof import('../team/team.service.ts').TeamService>['create']>>;
export type TeamServiceFindOne = Awaited<ReturnType<InstanceType<typeof import('../team/team.service.ts').TeamService>['findOne']>>;
export type TeamServiceFindByEspnId = Awaited<ReturnType<InstanceType<typeof import('../team/team.service.ts').TeamService>['findByEspnId']>>;
export type TeamServiceGetAthletesForTeam = Awaited<ReturnType<InstanceType<typeof import('../team/team.service.ts').TeamService>['getAthletesForTeam']>>;
export type TeamServiceGetOpenMatchupsForTeam = Awaited<ReturnType<InstanceType<typeof import('../team/team.service.ts').TeamService>['getOpenMatchupsForTeam']>>;
export type TeamServiceUpdate = Awaited<ReturnType<InstanceType<typeof import('../team/team.service.ts').TeamService>['update']>>;
export type TeamServiceRemove = Awaited<ReturnType<InstanceType<typeof import('../team/team.service.ts').TeamService>['remove']>>;
export type TeamServiceGetAllTeams = Awaited<ReturnType<InstanceType<typeof import('../team/team.service.ts').TeamService>['getAllTeams']>>;
export type TeamServiceGetAllTeamsInstance = TeamServiceGetAllTeams[number];
export type StatsServiceGetAllStats = Awaited<ReturnType<InstanceType<typeof import('../stats/stats.service.ts').StatsService>['getAllStats']>>;
export type StatsServiceGetAllStatsInstance = StatsServiceGetAllStats[number];
export type StatsServiceGetStatById = Awaited<ReturnType<InstanceType<typeof import('../stats/stats.service.ts').StatsService>['getStatById']>>;
export type StatsServiceCreateStat = Awaited<ReturnType<InstanceType<typeof import('../stats/stats.service.ts').StatsService>['createStat']>>;
export type ReferralServiceGenerateReferralCode = Awaited<ReturnType<InstanceType<typeof import('../referral/referral.service.ts').ReferralService>['generateReferralCode']>>;
export type ReferralServiceGetReferralCode = Awaited<ReturnType<InstanceType<typeof import('../referral/referral.service.ts').ReferralService>['getReferralCode']>>;
export type ReferralServiceProcessReferral = Awaited<ReturnType<InstanceType<typeof import('../referral/referral.service.ts').ReferralService>['processReferral']>>;
export type ReferralServiceGetReferralStats = Awaited<ReturnType<InstanceType<typeof import('../referral/referral.service.ts').ReferralService>['getReferralStats']>>;
export type ReferralServiceFindAllReferredUsers = Awaited<ReturnType<InstanceType<typeof import('../referral/referral.service.ts').ReferralService>['findAllReferredUsers']>>;
export type ReferralServiceFindAllReferredUsersInstance = ReferralServiceFindAllReferredUsers[number];
export type ReferralServiceFetchUserReferralCode = Awaited<ReturnType<InstanceType<typeof import('../referral/referral.service.ts').ReferralService>['fetchUserReferralCode']>>;
export type ReferralServiceApplyReferralCode = Awaited<ReturnType<InstanceType<typeof import('../referral/referral.service.ts').ReferralService>['applyReferralCode']>>;
export type ReferralServiceGetRefferer = Awaited<ReturnType<InstanceType<typeof import('../referral/referral.service.ts').ReferralService>['getRefferer']>>;
export type NotificationServiceSendNotificationToUser = Awaited<ReturnType<InstanceType<typeof import('../notification/notification.service.ts').NotificationService>['sendNotificationToUser']>>;
export type NotificationServiceSendChatNotificationToUser = Awaited<ReturnType<InstanceType<typeof import('../notification/notification.service.ts').NotificationService>['sendChatNotificationToUser']>>;
export type NotificationServiceBroadcastMessageToAllUsers = Awaited<ReturnType<InstanceType<typeof import('../notification/notification.service.ts').NotificationService>['broadcastMessageToAllUsers']>>;
export type MatchupsServiceGetAllMatchups = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['getAllMatchups']>>;
export type MatchupsServiceGetAllMatchupsInstance = MatchupsServiceGetAllMatchups[number];
export type MatchupsServiceGetAllOpenMatchups = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['getAllOpenMatchups']>>;
export type MatchupsServiceGetAllOpenMatchupsInstance = MatchupsServiceGetAllOpenMatchups[number];
export type MatchupsServiceGetMatchupsWithOpenLines = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['getMatchupsWithOpenLines']>>;
export type MatchupsServiceGetMatchupsThatShouldHaveStarted = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['getMatchupsThatShouldHaveStarted']>>;
export type MatchupsServiceGetMatchupsBetweenDateTimeRange = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['getMatchupsBetweenDateTimeRange']>>;
export type MatchupsServiceGetMatchupsInProgress = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['getMatchupsInProgress']>>;
export type MatchupsServiceGetMatchupById = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['getMatchupById']>>;
export type MatchupsServiceGetMatchupByEspnId = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['getMatchupByEspnId']>>;
export type MatchupsServiceUpdateMatchup = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['updateMatchup']>>;
export type MatchupsServiceCreateMatchup = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['createMatchup']>>;
export type MatchupsServiceCreateLinesForMatchup = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['createLinesForMatchup']>>;
export type MatchupsServiceResolveLinesForMatchup = Awaited<ReturnType<InstanceType<typeof import('../matchups/matchups.service.ts').MatchupsService>['resolveLinesForMatchup']>>;
export type LinesServiceCreateLine = Awaited<ReturnType<InstanceType<typeof import('../lines/lines.service.ts').LinesService>['createLine']>>;
export type LinesServiceBulkCreateLines = Awaited<ReturnType<InstanceType<typeof import('../lines/lines.service.ts').LinesService>['bulkCreateLines']>>;
export type LinesServiceGetAllLines = Awaited<ReturnType<InstanceType<typeof import('../lines/lines.service.ts').LinesService>['getAllLines']>>;
export type LinesServiceGetAllLinesInstance = LinesServiceGetAllLines[number];
export type LinesServiceGetLineById = Awaited<ReturnType<InstanceType<typeof import('../lines/lines.service.ts').LinesService>['getLineById']>>;
export type LinesServiceUpdateLine = Awaited<ReturnType<InstanceType<typeof import('../lines/lines.service.ts').LinesService>['updateLine']>>;
export type LinesServiceDeleteLine = Awaited<ReturnType<InstanceType<typeof import('../lines/lines.service.ts').LinesService>['deleteLine']>>;
export type LinesServiceResolveLine = Awaited<ReturnType<InstanceType<typeof import('../lines/lines.service.ts').LinesService>['resolveLine']>>;
export type LinesServiceBulkResolveLines = Awaited<ReturnType<InstanceType<typeof import('../lines/lines.service.ts').LinesService>['bulkResolveLines']>>;
export type TokenServiceCreate = Awaited<ReturnType<InstanceType<typeof import('../games/token.service.ts').TokenService>['create']>>;
export type TokenServiceFindAll = Awaited<ReturnType<InstanceType<typeof import('../games/token.service.ts').TokenService>['findAll']>>;
export type TokenServiceFindAllInstance = TokenServiceFindAll[number];
export type TokenServiceRemove = Awaited<ReturnType<InstanceType<typeof import('../games/token.service.ts').TokenService>['remove']>>;
export type GamesServiceCreate = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['create']>>;
export type GamesServiceFindAll = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['findAll']>>;
export type GamesServiceFindAllInstance = GamesServiceFindAll[number];
export type GamesServiceFindAllOpen = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['findAllOpen']>>;
export type GamesServiceFindAllOpenInstance = GamesServiceFindAllOpen[number];
export type GamesServiceGetJoinedGames = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['getJoinedGames']>>;
export type GamesServiceGetMyOpenGames = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['getMyOpenGames']>>;
export type GamesServiceGetMyOpenGamesInstance = GamesServiceGetMyOpenGames[number];
export type GamesServiceGetMyCompletedGames = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['getMyCompletedGames']>>;
export type GamesServiceGetMyCompletedGamesInstance = GamesServiceGetMyCompletedGames[number];
export type GamesServiceFindOne = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['findOne']>>;
export type GamesServiceSubmitBets = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['submitBets']>>;
export type GamesServiceFindByGameCode = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['findByGameCode']>>;
export type GamesServiceFindGamesCreatedByUser = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['findGamesCreatedByUser']>>;
export type GamesServiceUpdate = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['update']>>;
export type GamesServiceResolveGame = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['resolveGame']>>;
export type GamesServiceRemove = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['remove']>>;
export type GamesServiceEnsureUserOwnsGame = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['ensureUserOwnsGame']>>;
export type GamesServiceGenerateUniqueGameCode = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['generateUniqueGameCode']>>;
export type GamesServiceValidateGameAccess = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['validateGameAccess']>>;
export type GamesServiceInviteUserToPlay = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['inviteUserToPlay']>>;
export type GamesServiceGetPrivateGamesFromFollowing = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['getPrivateGamesFromFollowing']>>;
export type GamesServiceResolveAllPossibleGames = Awaited<ReturnType<InstanceType<typeof import('../games/games.service.ts').GamesService>['resolveAllPossibleGames']>>;
export type GameModeServiceCreate = Awaited<ReturnType<InstanceType<typeof import('../games/game-mode.service.ts').GameModeService>['create']>>;
export type GameModeServiceFindAll = Awaited<ReturnType<InstanceType<typeof import('../games/game-mode.service.ts').GameModeService>['findAll']>>;
export type GameModeServiceFindAllInstance = GameModeServiceFindAll[number];
export type GameModeServiceFindOne = Awaited<ReturnType<InstanceType<typeof import('../games/game-mode.service.ts').GameModeService>['findOne']>>;
export type GameModeServiceUpdate = Awaited<ReturnType<InstanceType<typeof import('../games/game-mode.service.ts').GameModeService>['update']>>;
export type GameModeServiceRemove = Awaited<ReturnType<InstanceType<typeof import('../games/game-mode.service.ts').GameModeService>['remove']>>;
export type GameAccessServiceCreate = Awaited<ReturnType<InstanceType<typeof import('../games/game-access.service.ts').GameAccessService>['create']>>;
export type GameAccessServiceViewGameAccessList = Awaited<ReturnType<InstanceType<typeof import('../games/game-access.service.ts').GameAccessService>['ViewGameAccessList']>>;
export type GameAccessServiceCheckAccess = Awaited<ReturnType<InstanceType<typeof import('../games/game-access.service.ts').GameAccessService>['checkAccess']>>;
export type GameAccessServiceUpdate = Awaited<ReturnType<InstanceType<typeof import('../games/game-access.service.ts').GameAccessService>['update']>>;
export type GameAccessServiceRemove = Awaited<ReturnType<InstanceType<typeof import('../games/game-access.service.ts').GameAccessService>['remove']>>;
export type FriendsServiceToggleFollow = Awaited<ReturnType<InstanceType<typeof import('../friends/friends.service.ts').FriendsService>['toggleFollow']>>;
export type FriendsServiceGetFollowers = Awaited<ReturnType<InstanceType<typeof import('../friends/friends.service.ts').FriendsService>['getFollowers']>>;
export type FriendsServiceGetFollowing = Awaited<ReturnType<InstanceType<typeof import('../friends/friends.service.ts').FriendsService>['getFollowing']>>;
export type FriendsServiceIsCreatorFollowing = Awaited<ReturnType<InstanceType<typeof import('../friends/friends.service.ts').FriendsService>['isCreatorFollowing']>>;
export type FriendsServiceIsFollowing = Awaited<ReturnType<InstanceType<typeof import('../friends/friends.service.ts').FriendsService>['isFollowing']>>;
export type AuthServiceValidateSession = Awaited<ReturnType<InstanceType<typeof import('../auth/auth.service.ts').AuthService>['validateSession']>>;
export type AuthServiceRegisterUserWithStreamChat = Awaited<ReturnType<InstanceType<typeof import('../auth/auth.service.ts').AuthService>['registerUserWithStreamChat']>>;
export type AuthServiceFaucetTokens = Awaited<ReturnType<InstanceType<typeof import('../auth/auth.service.ts').AuthService>['faucetTokens']>>;
export type AthletesServiceGetAllAthletes = Awaited<ReturnType<InstanceType<typeof import('../athletes/athletes.service.ts').AthletesService>['getAllAthletes']>>;
export type AthletesServiceGetAllAthletesInstance = AthletesServiceGetAllAthletes[number];
export type AthletesServiceGetActiveAthletesWithUnresolvedLines = Awaited<ReturnType<InstanceType<typeof import('../athletes/athletes.service.ts').AthletesService>['getActiveAthletesWithUnresolvedLines']>>;
export type AthletesServiceCreateAthlete = Awaited<ReturnType<InstanceType<typeof import('../athletes/athletes.service.ts').AthletesService>['createAthlete']>>;
export type AthletesServiceGetAthlete = Awaited<ReturnType<InstanceType<typeof import('../athletes/athletes.service.ts').AthletesService>['getAthlete']>>;
